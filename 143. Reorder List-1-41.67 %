/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        int NodeLength = 0;
        int i;
        
        ListNode *point = head;
        for( ; point != NULL ; point = point->next)
            NodeLength ++;
        
        
        ListNode **arr = new ListNode*[NodeLength];
        for( i = 0, point = head; point != NULL  && i<NodeLength; point = point->next, i++)
            arr[i] = point;
        
        
        for( i=0; i<=NodeLength/2 && NodeLength>0; i++)
        {
            if(i != NodeLength-(i+1))
                arr[i]->next = arr[NodeLength-(i+1)];
            else
            {
                arr[i]->next = NULL;
                break;
            }
            
            if(NodeLength-(i+1) != i+1)
                 arr[NodeLength-(i+1)]->next = arr[i+1];
            else
            {
                arr[NodeLength-(i+1)]->next = NULL;
                break;
            }
        }
    }
};
